{"ast":null,"code":"import _slicedToArray from\"D:\\\\Repos\\\\Projects\\\\test-ebook-4\\\\ebook0925\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React from'react';import Webcam from\"react-webcam\";import axios from'axios';import{Button,Row,Col,notification}from'antd';import{CheckCircleOutlined,CloseCircleOutlined,CloudUploadOutlined,PlayCircleOutlined,PauseCircleOutlined}from'@ant-design/icons';export var WebcamStreamCapture=function WebcamStreamCapture(props){var webcamRef=React.useRef(null);var mediaRecorderRef=React.useRef(null);var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),capturing=_React$useState2[0],setCapturing=_React$useState2[1];var _React$useState3=React.useState([]),_React$useState4=_slicedToArray(_React$useState3,2),recordedChunks=_React$useState4[0],setRecordedChunks=_React$useState4[1];var videoConstraints={width:320,height:240,facingMode:\"user\"};var handleStartCaptureClick=React.useCallback(function(){console.log(\"Start Capture\");setCapturing(true);mediaRecorderRef.current=new MediaRecorder(webcamRef.current.stream,{mimeType:\"video/webm\"});mediaRecorderRef.current.addEventListener(\"dataavailable\",handleDataAvailable);mediaRecorderRef.current.start();},[webcamRef,setCapturing,mediaRecorderRef]);var handleDataAvailable=React.useCallback(function(_ref){var data=_ref.data;if(data.size>0){setRecordedChunks(function(prev){return prev.concat(data);});}},[setRecordedChunks]);var handleStopCaptureClick=React.useCallback(function(){console.log(\"Stop Capture\");mediaRecorderRef.current.stop();setCapturing(false);},[mediaRecorderRef,webcamRef,setCapturing]);var handleDownload=React.useCallback(function(){console.log(\"Upload Video\");if(recordedChunks.length){console.log(\"Creating blob\");var blob=new Blob(recordedChunks,{type:\"video/webm\"});var formData=new FormData();formData.append(\"blob\",blob);console.log(\"Username inside the webcam capture: \");console.log(props);formData.append(\"username\",props.username?props.username:\"No Username Provided\");axios({method:'post',url:\"/_api2/video/upload\",data:formData}).then(function(response){console.log(\"Success\");console.log(response);notification.open({message:'Successfully uploaded video',icon:/*#__PURE__*/React.createElement(CheckCircleOutlined,{style:{color:'#a0d911'}})});}).catch(function(error){console.log(\"Failed\");console.log(error.response.data.message);notification.open({message:'Failed to upload video',icon:/*#__PURE__*/React.createElement(CloseCircleOutlined,{style:{color:'#f5222d'}})});});setRecordedChunks([]);}},[recordedChunks]);var stopAndDownload=React.useCallback(function(){handleStopCaptureClick();if(recordedChunks.length>0){handleDownload();}});return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Row,{justify:\"space-around\",align:\"middle\"},/*#__PURE__*/React.createElement(Col,{flex:1},/*#__PURE__*/React.createElement(\"div\",{style:{display:'flex',alignItems:'center',justifyContent:'center'}},capturing?/*#__PURE__*/React.createElement(Button,{onClick:handleStopCaptureClick,type:\"primary\",icon:/*#__PURE__*/React.createElement(PauseCircleOutlined,null),danger:true},\"\\u7ED3\\u675F\\u5F55\\u5236\\u5E76\\u4E0A\\u4F20\"):/*#__PURE__*/React.createElement(Button,{onClick:handleStartCaptureClick,type:\"primary\",icon:/*#__PURE__*/React.createElement(PlayCircleOutlined,null)},\"\\u5F00\\u59CB\\u5F55\\u5236\"))),/*#__PURE__*/React.createElement(Col,{flex:3},/*#__PURE__*/React.createElement(\"div\",{style:{display:'flex',alignItems:'center',justifyContent:'center'}},/*#__PURE__*/React.createElement(Webcam,{audio:true,ref:webcamRef,videoConstraints:videoConstraints,width:\"180\"}))),/*#__PURE__*/React.createElement(Col,{flex:1},/*#__PURE__*/React.createElement(\"div\",{style:{display:'flex',alignItems:'center',justifyContent:'center'}},recordedChunks.length>0&&/*#__PURE__*/React.createElement(Button,{onClick:handleDownload,type:\"primary\",icon:/*#__PURE__*/React.createElement(CloudUploadOutlined,null)},\"\\u5F00\\u59CB\\u4E0A\\u4F20\"),recordedChunks.length<=0&&/*#__PURE__*/React.createElement(Button,{disabled:true,type:\"primary\",icon:/*#__PURE__*/React.createElement(CloudUploadOutlined,null)},\"\\u5F00\\u59CB\\u4E0A\\u4F20\")))),/*#__PURE__*/React.createElement(Row,{style:{marginBottom:8}})));};","map":{"version":3,"sources":["D:/Repos/Projects/test-ebook-4/ebook0925/src/components/WebcamStreamCapture.js"],"names":["React","Webcam","axios","Button","Row","Col","notification","CheckCircleOutlined","CloseCircleOutlined","CloudUploadOutlined","PlayCircleOutlined","PauseCircleOutlined","WebcamStreamCapture","props","webcamRef","useRef","mediaRecorderRef","useState","capturing","setCapturing","recordedChunks","setRecordedChunks","videoConstraints","width","height","facingMode","handleStartCaptureClick","useCallback","console","log","current","MediaRecorder","stream","mimeType","addEventListener","handleDataAvailable","start","data","size","prev","concat","handleStopCaptureClick","stop","handleDownload","length","blob","Blob","type","formData","FormData","append","username","method","url","then","response","open","message","icon","color","catch","error","stopAndDownload","display","alignItems","justifyContent","marginBottom"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Webcam from \"react-webcam\";\r\nimport axios from 'axios';\r\nimport { Button, Row, Col, notification } from 'antd';\r\nimport { CheckCircleOutlined, CloseCircleOutlined, CloudUploadOutlined, PlayCircleOutlined, PauseCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\nexport const WebcamStreamCapture = (props) => {\r\n  const webcamRef = React.useRef(null);\r\n  const mediaRecorderRef = React.useRef(null);\r\n  const [capturing, setCapturing] = React.useState(false);\r\n  const [recordedChunks, setRecordedChunks] = React.useState([]);\r\n\r\n  const videoConstraints = {\r\n    width: 320,\r\n    height: 240,\r\n    facingMode: \"user\"\r\n  };\r\n\r\n  const handleStartCaptureClick = React.useCallback(() => {\r\n    console.log(\"Start Capture\");\r\n    setCapturing(true);\r\n    mediaRecorderRef.current = new MediaRecorder(webcamRef.current.stream, {\r\n      mimeType: \"video/webm\"\r\n    });\r\n    mediaRecorderRef.current.addEventListener(\r\n      \"dataavailable\",\r\n      handleDataAvailable\r\n    );\r\n    mediaRecorderRef.current.start();\r\n  }, [webcamRef, setCapturing, mediaRecorderRef]);\r\n\r\n  const handleDataAvailable = React.useCallback(\r\n    ({ data }) => {\r\n      if (data.size > 0) {\r\n        setRecordedChunks((prev) => prev.concat(data));\r\n      }\r\n    },\r\n    [setRecordedChunks]\r\n  );\r\n\r\n  const handleStopCaptureClick = React.useCallback(() => {\r\n    console.log(\"Stop Capture\");\r\n    mediaRecorderRef.current.stop();\r\n    setCapturing(false);\r\n  }, [mediaRecorderRef, webcamRef, setCapturing]);\r\n\r\n  const handleDownload = React.useCallback(() => {\r\n    console.log(\"Upload Video\");\r\n    if (recordedChunks.length) {\r\n      console.log(\"Creating blob\");\r\n      const blob = new Blob(recordedChunks, {\r\n        type: \"video/webm\"\r\n      });\r\n    var formData = new FormData();\r\n    formData.append(\"blob\", blob);\r\n    console.log(\"Username inside the webcam capture: \");\r\n    console.log(props);\r\n    formData.append(\"username\", props.username ? props.username : \"No Username Provided\");\r\n\r\n    axios({\r\n      method: 'post',\r\n      url: \"/_api2/video/upload\",\r\n      data: formData, \r\n    }).then(function (response) {\r\n      console.log(\"Success\");\r\n      console.log(response);\r\n      notification.open({\r\n        message: 'Successfully uploaded video',\r\n        icon: <CheckCircleOutlined  style={{ color: '#a0d911' }} />,\r\n      });\r\n    })\r\n    .catch(function (error) {\r\n      console.log(\"Failed\");\r\n      console.log(error.response.data.message);\r\n      notification.open({\r\n        message: 'Failed to upload video',\r\n        icon: <CloseCircleOutlined  style={{ color: '#f5222d' }} />,\r\n      });\r\n    });\r\n\r\n    setRecordedChunks([]);\r\n    }\r\n  }, [recordedChunks]);\r\n\r\n  const stopAndDownload = React.useCallback(() => { \r\n    handleStopCaptureClick();\r\n    if (recordedChunks.length > 0){\r\n      handleDownload();\r\n    }\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <Row justify=\"space-around\" align=\"middle\">\r\n          <Col flex={1}>\r\n            <div style={{\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n            }}>\r\n              {capturing ? (\r\n              <Button onClick={handleStopCaptureClick} type=\"primary\" icon={<PauseCircleOutlined />} danger>结束录制并上传</Button>\r\n              ) : (\r\n                <Button onClick={handleStartCaptureClick}\r\n                  type=\"primary\"\r\n                  icon={<PlayCircleOutlined />}\r\n                >开始录制</Button>\r\n              )}\r\n            </div>\r\n          </Col>\r\n\r\n          <Col flex={3}>\r\n            <div style={{\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n            }}>\r\n              <Webcam audio={true} ref={webcamRef} videoConstraints={videoConstraints} width=\"180\"/>\r\n            </div>\r\n          </Col>\r\n\r\n          <Col flex={1}>\r\n            <div style={{\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n            }}>\r\n              {recordedChunks.length > 0 && (\r\n                <Button onClick={handleDownload} \r\n                type=\"primary\"\r\n                icon={<CloudUploadOutlined />}\r\n                >开始上传</Button>\r\n              )}\r\n              {recordedChunks.length <= 0 && (\r\n                <Button disabled\r\n                type=\"primary\"\r\n                icon={<CloudUploadOutlined />}\r\n                >开始上传</Button>\r\n              )}\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row style={{ marginBottom: 8 }}></Row>\r\n\r\n      </div>\r\n      \r\n    </>\r\n  );\r\n};"]},"metadata":{},"sourceType":"module"}